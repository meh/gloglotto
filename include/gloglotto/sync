/** Copyleft (É”) meh. - http://meh.schizofreni.co
 *
 * This file is part of gloglotto - https://github.com/meh/gloglotto
 *
 * gloglotto is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * gloglotto is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with gloglotto. If not, see <http://www.gnu.org/licenses/>.
 */

#ifndef _GLOGLOTTO_REST_H
#define _GLOGLOTTO_REST_H

#include <gloglotto/headers>
#include <gloglotto/exception>

namespace gloglotto
{
	class sync final
	{
		public:
			class server final { };
			class client final { };

		public:
			enum class status : unsigned
			{
				already_signaled    = GL_ALREADY_SIGNALED,
				timeout_expired     = GL_TIMEOUT_EXPIRED,
				condition_satisfied = GL_CONDITION_SATISFIED,
				wait_failed         = GL_WAIT_FAILED
			};

		public:
			sync (void);

			~sync (void);

			bool signaled (void);

			template <class Type = client>
			status wait (unsigned timeout = 0) throw (std::invalid_argument);

		private:
			GLsync _sync;
	};

	void flush (void);
	void finish (void);
}

#include <gloglotto/sync.tpp>

#endif
