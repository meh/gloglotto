/** Copyleft (É”) meh. - http://meh.schizofreni.co
 *
 * This file is part of gloglotto - https://github.com/meh/gloglotto
 *
 * gloglotto is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * gloglotto is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with gloglotto. If not, see <http://www.gnu.org/licenses/>.
 */

#ifndef _GLOGLOTTO_MATH_UTILITY_H
#define _GLOGLOTTO_MATH_UTILITY_H

#include <gloglotto/maths/matrix>
#include <gloglotto/maths/angle>

#include <utility>
#include <array>

namespace gloglotto
{
	namespace math
	{
		namespace make
		{
			template <typename Type = float>
			matrix<4, 4, Type> perspective (angle fov, Type aspect, std::array<Type, 2> z);

			template <typename Type = float>
			matrix<4, 4, Type> orthographic (std::array<Type, 2> x, std::array<Type, 2> y, std::array<Type, 2> z);

			template <typename Type = float>
			matrix<4, 4, Type> translation (Type x, Type y, Type z);

			template <typename Type = float>
			matrix<4, 4, Type> translation (vector<3, Type> with);

			template <int Size = 3, typename Type = float>
			matrix<Size, Size, Type> rotation (angle a, Type x, Type y, Type z);

			template <int Size = 3, typename Type = float>
			matrix<Size, Size, Type> rotation (angle a, vector<3, Type> with);

			template <int Size = 3, typename Type = float>
			matrix<Size, Size, Type> scale (Type x, Type y, Type z);

			template <int Size = 3, typename Type = float>
			matrix<Size, Size, Type> scale (vector<3, Type> with);
		}
	}
}

#include <gloglotto/maths/utility.tpp>

#endif
